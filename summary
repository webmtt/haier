1.软件开发流程，熟悉Hybrid App开发流程
  熟悉整个开发流程，从需求评审->工时评估->需求开发->联调->内测->bug修改->发布
2.了解常用框架及开源组件
  学习react、reactNative、vue、antd-mobile、flutter等框架和组件，了解各个框架适用的场景
3.了解Less/Sass，CSS3，ES6，TypeScript
  Less和Sass都是动态样式语言，了解css的新特性，以及预处理器，便于维护css；
学习es6的新特性，简化了语法；
TS引入了 接口、类、继承的编程思想，是 JavaScript 的一个超集。主要提供了类型系统和对 ES6 的支持。增加了代码的可读性和可维护性。
4.了解页面性能优化及分析方法
  1.页面性能优化：资源压缩合并，减少http请求；非核心代码异步加载；
减少DOM、CSSOM构建时间等方法。
2.分析方法：可使用Chrome DevTools的Timeline来分析页面性能
5.熟练掌握开发工具及项目管理工具
  了解VSCode、小程序开发工具、手机模拟器的使用、快捷键操作；
了解gerrit、禅道、confluence等工具的使用；
6.掌握mpaas等容器接口调用方法
  了解如何在web端调用容器接口，以及怎么打开mpaas项目调试
7.掌握React\Mobx框架，熟练使用各种UI组件
  react是用来构建用户界面的js库，通过使用虚拟DOM减少昂贵的DOM变化的数量来优化UI渲染。
MoBX是一种简单的、可扩展的经过测试的状态管理方案。
React与mobx结合，可以更简单有效的控制项目逻辑；
8.掌握前端模块化设计及组件化方案
  模块化类似于按业务对APP进行拆分，就是从文件层面对代码和资源的拆分；
组件化类似于app的架构思路，就是从设计层面上对UI进行拆分。
可食用import(ES6模块规范)和require(CommonJS规范)引入。import属于动态只读引用，等到脚本真正执行时，再根据这个只读引用，到被加载的那个模块里面去取值，require命令加载某个模块时会立即运行整个模块的代码；
9.完成项目工作评估及实现方案设计
  根据分配到的需求以及需要完成的工作，实现难度来评估完成工作的时间，并且中间要留出部分可调整的时间，以防意外的发生。
另外工作要分阶段来实现，对于影响整体流程的应该先实现，耗时且影响范围小的可以延后，细化工作，量化任务，更好的有目标的来完成开发。
10.完成uplus-api库的接口开发工作
  了解到uplus-api作为接口适配层，对一些公共的接口进行适配，使接口可以在apicloud、cordova、weixin、微信webview中正常使用；
11.完成调研工作：ReactNative\Flutter
  ReactNative：使我们只使用JavaScript也能编写原生移动应用，设计原理上和React一致，通过声明式的组件机制来搭建丰富多彩的用户界面。可实现跨平台兼容性，卓越性能，学习成本相对较低，运行流畅；
flutter: 是一款移动应用程序SDK，开发速度快，支持热重载，有自己的UI框架，可以跨平台运行，运行流畅。在flutter中一切皆为widget.flutter使用自己的渲染引擎绘制widget。
12.按计划完成指定项目开发工作及问题处理
  开发前，量化、细化所要做的工作，尽量留出意外发生，可调整的时间。开发过程中，本着不影响系统性能的心态开发功能，有解决不了的问题及时向其他同事求助，尽量不能延误提测时间，测出bug时，主动承担责任，第一时间与测试沟通疑问并解决问题，主动向其他同事学习专业技能和他人的长处，解决完bug，认真测试已解决的bug并测试周边功能是否被影响。尽量在规定时间内完成自己的本职工作。
